/*****************************************************************************
 * LEMON v1.00                                                               *
 *                                                                           *
 * This file is part of the LEMON implementation of the SCIDAC LEMON format. *
 *                                                                           *
 * It is based directly upon the original c-lemon implementation,            *
 * as maintained by C. deTar for the USQCD Collaboration,                    *
 * and inherits its license model and parts of its original code.            *
 *                                                                           *
 * LEMON is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by      *
 * the Free Software Foundation, either version 3 of the License, or         *
 * (at your option) any later version.                                       *
 *                                                                           *
 * LEMON is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 * GNU General Public License for more details. You should have received     *
 * a copy of the GNU General Public License along with LEMON. If not,        *
 * see <http://www.gnu.org/licenses/>.                                       *
 *                                                                           *
 * LEMON was written for the European Twisted Mass Collaboration.            *
 * For support requests or bug reports, please contact                       *
 *    A. Deuzeman (deuzeman@itp.unibe.ch)                                    *
 *****************************************************************************/

#pragma once

#include "internal_LemonSetup.ih"
#include "internal_chainDecomposeEtype.static"

static void lemonSetupTypeChain(struct LemonSetup **setup, MPI_Offset nbytes)
{
  *setup = (struct LemonSetup*)malloc(sizeof(struct LemonSetup));
  struct LemonSetup *dsetup = *setup;
  
  dsetup->esize = nbytes;

  lemonChainDecomposeEtype(dsetup, &nbytes); /* Fix potential overflow by chaining non-overflowing sizes. */
  MPI_Type_contiguous(nbytes, dsetup->etype_int[dsetup->est], &dsetup->etype);
  MPI_Type_commit(&dsetup->etype);
  dsetup->striped_flag = 0;
}
